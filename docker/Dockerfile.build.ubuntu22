#/*
# * Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
# * contributor license agreements.  See the NOTICE file distributed with
# * this work for additional information regarding copyright ownership.
# * The OpenAirInterface Software Alliance licenses this file to You under
# * the OAI Public License, Version 1.1  (the "License"); you may not use this file
# * except in compliance with the License.
# * You may obtain a copy of the License at
# *
# *   r express or implied.
# * See the License for the specific language governing permissions and
# * limitations under the License.
# *-------------------------------------------------------------------------------
# * For more information about the OpenAirInterface (OAI) Software Alliance:
# *      contact@openairinterface.org
# */
#---------------------------------------------------------------------
#
# Dockerfile for the Open-Air-Interface BUILD service
#   Valid for Ubuntu 22.04
#
#---------------------------------------------------------------------

  FROM ran-base:latest AS ran-build
  ARG BUILD_OPTION
  
  RUN rm -Rf /oai-ran
  WORKDIR /oai-ran
  COPY . .
  
  # build all targets so final targets can be created afterwards
  # RUN /bin/sh oaienv && \
  #     cd cmake_targets && \
  #     mkdir -p log && \
  #     ./build_oai -c --ninja \
  #       --eNB --gNB --RU --UE --nrUE \
  #       --build-lib "telnetsrv enbscope uescope nrscope" \
  #       -w USRP -t Ethernet \
  #       --build-e2 --cmake-opt -DXAPP_MULTILANGUAGE=OFF \
  #       --noavx512 \
  #       --cmake-opt -DCMAKE_C_FLAGS="-Werror" --cmake-opt -DCMAKE_CXX_FLAGS="-Werror" $BUILD_OPTION && \
  #     # Mainly to see if the sanitize option was perfectly executed
  #     echo "---- ldd on executables ----" && \
  #     ldd ran_build/build/*softmodem* ran_build/build/nr-cuup ran_build/build/oairu && \
  #     echo "---- ldd on shared libraries ----" && \
  #     ldd ran_build/build/*.so
  
  RUN /bin/sh oaienv && \
      cd cmake_targets && \
      mkdir -p log && \
      ./build_oai -c --ninja \
        --eNB --gNB --RU --UE --nrUE \
        --build-lib "telnetsrv enbscope uescope nrscope" \
        -w USRP -w SIMU -t Ethernet \
        --build-e2 --cmake-opt -DXAPP_MULTILANGUAGE=OFF \
        --noavx512 \
        $BUILD_OPTION && \
      echo "OAI build completed successfully"

  ## Build FlexRIC for SM Models
  RUN cd openair2/E2AP/flexric && \
      rm -rf build && \
      mkdir -p build && \
      cd build && \
      rm -rf  openair2/E2AP/flexric/CMakeCache.txt  openair2/E2AP/flexric/CMakeFiles && \
      cmake -GNinja \
            -DCMAKE_BUILD_TYPE=Release \
            -DXAPP_MULTILANGUAGE=OFF \
            -DKPM_VERSION=KPM_V2_03 \
            -DE2AP_VERSION=E2AP_V2 \
            -DCMAKE_C_COMPILER=gcc-12 \
            -DCMAKE_CXX_COMPILER=g++-12 .. && \
      ninja && \
      ninja install && \
      echo "FlexRIC build completed successfully"
  
  # Start a new stage for the runtime image
  FROM ubuntu:22.04 AS runtime
  
  # Install sudo and any runtime dependencies
  RUN apt-get update && apt-get install -y \
      sudo \
      # Add other necessary runtime dependencies here
      && rm -rf /var/lib/apt/lists/*
  
  # Create a user with sudo privileges
  RUN useradd -m oaiuser && echo "oaiuser:oaiuser" | chpasswd && adduser oaiuser sudo
  
  # Ensure sudo group users are not asked for a password when using sudo
  RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
  
  # Copy built artifacts from builder stage
  COPY --from=ran-build --chown=oaiuser:oaiuser /oai-ran/cmake_targets/ran_build /oai-ran/ran_build
  
  # Set working directory
  WORKDIR /oai-ran
  
  # Switch to the oaiuser
  USER oaiuser
  
  # Create a script to run the application with sudo
  RUN echo '#!/bin/bash\n\
  exec sudo /oai-ran/cmake_targets/ran_build/build/nr-softmodem "$@"' > /oai-ran/run_with_sudo.sh && \
    chmod +x /oai-ran/run_with_sudo.sh
  
  # Set the entry point to the script
  ENTRYPOINT ["/oai-ran/run_with_sudo.sh"]
  
