
#include <libbladeRF.h>
/*
enum brf_err_num{
  BLADERF_ERR_MIN=0,
  BLADERF_ERR_UNEXPECTED=-1,
  BLADERF_ERR_RANGE=-2,
  BLADERF_ERR_INVAL=-3,
  BLADERF_ERR_MEM=-4,
  BLADERF_ERR_IO=-5,
  BLADERF_ERR_TIMEOUT=-6,
  BLADERF_ERR_NODEV=-7,
  BLADERF_ERR_UNSUPPORTED=-8,
  BLADERF_ERR_MISALIGNED=-9,
  BLADERF_ERR_CHECKSUM=-10,
  BLADERF_ERR_NO_FILE=-11,
  BLADERF_ERR_UPDATE_FPGA=-12,
  BLADERF_ERR_UPDATE_FW=-13,
  BLADERF_ERR_TIME_PAST=-14,
  BLADERF_ERR_MAX=-15,
}
mapping brf_err_names[] = {
  {"BLADERF_OK", BLADERF_ERR_MIN},
  {"BLADERF_ERR_UNEXPECTED",BLADERF_ERR_UNEXPECTED},
  {"BLADERF_ERR_RANGE",BLADERF_ERR_RANGE},
  {"BLADERF_ERR_INVAL",BLADERF_ERR_INVAL},
  {"BLADERF_ERR_MEM",BLADERF_ERR_MEM},
  {"BLADERF_ERR_IO",BLADERF_ERR_IO},
  {"BLADERF_ERR_TIMEOUT",BLADERF_ERR_TIMEOUT},
  {"BLADERF_ERR_NODEV",BLADERF_ERR_NODEV},
  {"BLADERF_ERR_UNSUPPORTED",BLADERF_ERR_UNSUPPORTED},
  {"BLADERF_ERR_MISALIGNED",BLADERF_ERR_MISALIGNED},
  {"BLADERF_ERR_CHECKSUM",BLADERF_ERR_CHECKSUM},
  {"BLADERF_ERR_NO_FILE",BLADERF_ERR_NO_FILE},
  {"BLADERF_ERR_UPDATE_FPGA",BLADERF_ERR_UPDATE_FPGA},
  {"BLADERF_ERR_UPDATE_FW",BLADERF_ERR_UPDATE_FW},
  {"BLADERF_ERR_TIME_PAST",BLADERF_ERR_TIME_PAST},
  {NULL, BLADERF_ERR_MAX}
};
*/
/*
 * func prototypes 
 */

void brf_error(int status);
